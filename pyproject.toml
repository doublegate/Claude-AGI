[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "claude-agi"
version = "0.1.0"
description = "An advanced self-consciousness platform implementing continuous consciousness, autonomous learning, and meta-cognitive capabilities for Claude AI"
readme = "README.md"
authors = [
    {name = "Claude-AGI Project Contributors", email = "contact@claude-agi-project.org"}
]
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "anthropic>=0.18.0",
    "asyncio>=3.11.0",
    "aiofiles>=23.2.1",
    "redis>=5.0.0",
    "asyncpg>=0.29.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "numpy>=1.24.0",
    "faiss-cpu>=1.7.4",
    "sentence-transformers>=2.2.0",
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "loguru>=0.7.0",
    "rich>=13.7.0",
    "blessed>=1.20.0",
    "prompt_toolkit>=3.0.0",
    "httpx>=0.26.0",
    "beautifulsoup4>=4.12.0",
    "trafilatura>=1.8.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "black>=23.12.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]

phase2 = [
    "beautifulsoup4>=4.12.0",
    "selenium>=4.18.0",
    "playwright>=1.41.0",
    "spacy>=3.7.0",
    "scikit-learn>=1.4.0",
]

phase3 = [
    "textblob>=0.18.0",
    "vaderSentiment>=3.3.0",
    "matplotlib>=3.8.0",
    "plotly>=5.19.0",
]

[project.urls]
Homepage = "https://github.com/doublegate/Claude-AGI"
Documentation = "https://github.com/doublegate/Claude-AGI/tree/main/docs"
Repository = "https://github.com/doublegate/Claude-AGI"
Issues = "https://github.com/doublegate/Claude-AGI/issues"

[project.scripts]
claude-agi = "src.main:main"
claude-tui = "scripts.claude_consciousness_tui:main"
setup-phase1 = "scripts.setup.setup_phase1:setup_phase1"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*", "scripts*"]
exclude = ["tests*"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "C",  # flake8-comprehensions
    "S",  # flake8-bandit
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "S101",  # use of assert detected
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
asyncio_mode = "auto"
markers = [
    "safety: mark test as safety-critical test",
    "integration: mark test as integration test",
    "performance: mark test as performance test",
    "slow: mark test as slow running",
]
filterwarnings = [
    # Ignore deprecation warnings from third-party libraries
    # FAISS uses SWIG bindings which generate these warnings in Python 3.13
    # These are harmless and will be fixed upstream in future FAISS releases
    "ignore::DeprecationWarning:faiss.*",
    "ignore:builtin type SwigPyPacked has no __module__ attribute:DeprecationWarning",
    "ignore:builtin type SwigPyObject has no __module__ attribute:DeprecationWarning", 
    "ignore:builtin type swigvarlink has no __module__ attribute:DeprecationWarning",
    # FAISS uses deprecated numpy internals - will be fixed in future releases
    "ignore:numpy.core._multiarray_umath is deprecated:DeprecationWarning",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false